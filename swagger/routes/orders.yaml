components:
  routes:
    GetAll:
      tags:
        - Orders
      summary: Get list of all orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderDoc'
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
    GetUserOrders:
      tags:
        - Orders
        - Users
      summary: Get all orders of the current connected user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderDoc'
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
    GetOne:
      tags:
        - Orders
      summary: Get one order by ID
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/OrderDetailsDoc'
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
    DeleteOne:
      tags:
        - Orders
      summary: Delete one order by ID
      parameters:
        - name: orderId
          in: path
          description: ID of the order to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
    EditOne:
      tags:
        - Orders
      summary: Edit one order by ID
      parameters:
        - name: orderId
          in: path
          description: ID of the order to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: New order status
                  enum: [COMPLETED]
                  example: COMPLETED
                items:
                  type: array
                  description: Items to order
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: ID of product to order
                        example: 670f198f1fc4fdd76bd0AAAA
                      quantity:
                        type: integer
                        description: Amount of product to order
                        minimum: 1
                        example: 4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
    Add:
      tags:
        - Orders
      summary: Order product(s)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: Items to order
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: ID of product to order
                        example: 670f198f1fc4fdd76bd0AAAA
                      quantity:
                        type: integer
                        description: Amount of product to order
                        minimum: 1
                        example: 4
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: ID of the newly created order
                    example: 670f198f1fc4fdd76bd0AAAA
        '400':
          $ref: '#/components/errors/BadRequest'
        '401':
          $ref: '#/components/errors/Unauthorized'
        '403':
          $ref: '#/components/errors/Forbidden'
        '404':
          $ref: '#/components/errors/NotFound'
        '500':
          $ref: '#/components/errors/SthWentWrong'
